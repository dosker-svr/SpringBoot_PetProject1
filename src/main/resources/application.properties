# конфигурация для базы данных в postgres
# spring.jpa.generate-ddl=true - эта страка означает, что spring возьмёт на себя создание структуруы базы данных
spring.datasource.url=jdbc:postgresql://localhost:5432/web_application_sweat
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.generate-ddl=false

# показывать в логах sql (который генерирует hibernate при работе с базой данных) - show-sql=true
# нужен для просмотра скриптов(генерируемых hibernate) при работе с db:
spring.jpa.show-sql=false
# режим в котором hibernate генерирует базу данных
# (*create - при старте, bd будет удалена и созданная новая со структурой наших Entity-файлов
# *validate - вместо создания/обновления hibernate будет проверять корректность нашей доменной модели к данным в db
# *при расхождениях - приложение не запуститься с сообщением
spring.jpa.hibernate.ddl-auto=validate

# т.к. мы используем mustache, то нам нужно использовать CSRF
# CSRF позволяет избежать хакерских атак, т.е. обращаться к моему севреру, отправлять данные могут только те страницы (тот код на js),
# у которого есть соответсвующий токен, выданный сервером
# эта строчка включает доп.аттрибуты для mustache
# и Spring Mvc в контроллере будет отдавать доп.параметры и они будут переходит в шаблон
spring.freemarker.expose-request-attributes=true

# путь для хранения загруженных файлов на сервере
upload.path=C:/NetologyProjects/SpringBoot/SpringBoot_PetProject1_WedApplication/uploadToServ

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.mail.host=smtp.yandex.ru
spring.mail.username=don-kalinio@yandex.ru
spring.mail.password=yphapgmeddfixkth
spring.mail.port=465
spring.mail.protocol=smtps
# для отображения лога на сервере
mail.debug=false

# для добавления каптчи
recaptcha.secret=6LfC804dAAAAAHZq8jFsI2QOsGLoTFmi7xvroV97

# для rememberMe: чтобы хранить сессии входов на сервере:
# spring-session возьмет на себя создание таблиц для хранения сессий (конечно мы сами можем создать эти таблицы, но т.к. мы не управляем этим кодом, отвечачать за структуру db не правильно)
spring.session.jdbc.initialize-schema=always
# имя таблицы
spring.session.jdbc.table-name=SPRING_SESSION